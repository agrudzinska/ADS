select * from user_types;

CREATE TYPE person AS OBJECT (
name VARCHAR2(20),
surname VARCHAR2(20)
);

ALTER TYPE person NOT FINAL cascade;

drop table peopleTable;
drop table jobTable;
drop table person_table;
drop type job;
drop type employee;
drop type person;
drop type address force;
drop type name;

CREATE TYPE employee UNDER person
(emp_ID INTEGER)
NOT FINAL
/

CREATE TYPE job AS OBJECT (
jobtitle VARCHAR2(20),
job_ID INT,
salary_amount INT,
years_experience INT
)
NOT FINAL
/

desc employee;

create type employment as object(
employee_r ref employee,
position ref job);
/

CREATE TABLE employee_table OF employee;
CREATE TABLE job_table OF job;

create table employment_table(
employee ref employee scope is employee_table,
position ref job scope is job_table);

INSERT INTO job_table
values
('Engineer', 1, 1000, 3);

INSERT INTO job_table
values
('Manager', 2, 5000, 2);

INSERT INTO job_table
values
('Designer', 3, 2000, 3);

INSERT INTO job_table
values
('Developer', 4, 1000, 1);


INSERT INTO employee_table
values ('Ada', '1234', 1);

INSERT INTO employee_table
values ('Adam', '5678', 2);

INSERT INTO employee_table
values ('John', '9012', 3);

INSERT INTO employee_table
values ('Jack', '3456', 4);

INSERT INTO employee_table
values ('Amy', '7890', 5);

insert into employment_table
select ref(e), ref(j)
from job_table j, employee_table e
where e.emp_ID = 1
and j.job_ID = 1;

insert into employment_table
select ref(e), ref(j)
from job_table j, employee_table e
where e.emp_ID = 2
and j.job_ID = 2;

insert into employment_table
select ref(e), ref(j)
from job_table j, employee_table e
where e.emp_ID = 3
and j.job_ID = 3;

insert into employment_table
select ref(e), ref(j)
from job_table j, employee_table e
where e.emp_ID = 4
and j.job_ID = 4;

insert into employment_table
select ref(e), ref(j)
from job_table j, employee_table e
where e.emp_ID = 5
and j.job_ID = 1;

select * from EMPLOYMENT_TABLE;

select deref(e.EMPLOYEE), deref(e.POSITION)  from employment_table e;

select value(e.EMPLOYEE), value(e.POSITION)  from employment_table e;

select value(j)
from job_table j
where jobtitle = 'Engineer';

select * 
from job_table 
where jobtitle = 'Engineer';

select DEREF(p.employee)
from employment_table p;

create type project as object(project_id INT, project_leader ref employee, project_title varchar2(20));
/

create table project_table of project;
/

insert into project_table select project ('1', ref(e), 'Research Project') from employee_table e where e.emp_id = '1';
/
insert into project_table select project ('2', ref(e), 'Research Project') from employee_table e where e.emp_id = '2';
/
insert into project_table select project ('3', ref(e), 'Research Project') from employee_table e where e.emp_id = '3';

select deref(p.project_leader)
from project_table p;

CREATE OR REPLACE TYPE job2 AS OBJECT (
jobtitle varchar(20),
job_id int,
salary_amount int,
years_of_experience int,
MEMBER FUNCTION evaluate_qualification RETURN STRING,
MEMBER FUNCTION salary_fraction(N real) RETURN real
);
/

CREATE OR REPLACE TYPE BODY job2 AS
MEMBER FUNCTION evaluate_qualification RETURN STRING IS
BEGIN
IF self.years_of_experience < 2 THEN
RETURN 'too bad';
ELSIF self.years_of_experience = 2 THEN
RETURN 'OK';
ELSE
RETURN 'great!';
END IF;
END evaluate_qualification;
MEMBER FUNCTION salary_fraction(N real) RETURN real IS
sal real;
BEGIN
sal :=(self.salary_amount/n);
return sal;
END salary_fraction;
END;
/

create table job2table of job2;

INSERT INTO job2table
values
('Engineer', 1, 1000, 3);

INSERT INTO job2table
values
('Manager', 2, 5000, 2);

INSERT INTO job2table
values
('Designer', 3, 2000, 3);

INSERT INTO job2table
values
('Developer', 4, 1000, 1);

select j.evaluate_qualification(), j.salary_fraction(12)
from job2table j;